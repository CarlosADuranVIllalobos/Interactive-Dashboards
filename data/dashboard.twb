<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0613.1930                               -->
<workbook original-version='18.1' source-build='2024.2.0 (20242.24.0613.1930)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpecificWebTargetsForActions />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='dashboard_17218493596610' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='cleaned_covid_combined_data (2)' inline='true' name='federated.1d7zbz605ba1rr1byo1cu14uf5w0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_covid_combined_data' name='textscan.06ke9k60qa0fn71d3exl704cprix'>
            <connection class='textscan' directory='C:/Users/Carlos/Documents/GitHub/Interactive-Dashboards/data' filename='cleaned_covid_combined_data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06ke9k60qa0fn71d3exl704cprix' name='cleaned_covid_combined_data.csv' table='[cleaned_covid_combined_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='iso_code' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='real' name='total_vaccinations_x' ordinal='3' />
            <column datatype='real' name='people_vaccinated' ordinal='4' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='5' />
            <column datatype='real' name='daily_vaccinations_raw' ordinal='6' />
            <column datatype='real' name='daily_vaccinations' ordinal='7' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='8' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='9' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='10' />
            <column datatype='real' name='daily_vaccinations_per_million' ordinal='11' />
            <column datatype='string' name='vaccines' ordinal='12' />
            <column datatype='string' name='source_name' ordinal='13' />
            <column datatype='string' name='source_website' ordinal='14' />
            <column datatype='real' name='cumulative_total_cases' ordinal='15' />
            <column datatype='real' name='daily_new_cases' ordinal='16' />
            <column datatype='real' name='active_cases' ordinal='17' />
            <column datatype='real' name='cumulative_total_deaths' ordinal='18' />
            <column datatype='real' name='daily_new_deaths' ordinal='19' />
            <column datatype='real' name='population' ordinal='20' />
            <column datatype='string' name='vaccine' ordinal='21' />
            <column datatype='string' name='total_vaccinations_y' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.06ke9k60qa0fn71d3exl704cprix' name='cleaned_covid_combined_data.csv' table='[cleaned_covid_combined_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='iso_code' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='real' name='total_vaccinations_x' ordinal='3' />
            <column datatype='real' name='people_vaccinated' ordinal='4' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='5' />
            <column datatype='real' name='daily_vaccinations_raw' ordinal='6' />
            <column datatype='real' name='daily_vaccinations' ordinal='7' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='8' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='9' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='10' />
            <column datatype='real' name='daily_vaccinations_per_million' ordinal='11' />
            <column datatype='string' name='vaccines' ordinal='12' />
            <column datatype='string' name='source_name' ordinal='13' />
            <column datatype='string' name='source_website' ordinal='14' />
            <column datatype='real' name='cumulative_total_cases' ordinal='15' />
            <column datatype='real' name='daily_new_cases' ordinal='16' />
            <column datatype='real' name='active_cases' ordinal='17' />
            <column datatype='real' name='cumulative_total_deaths' ordinal='18' />
            <column datatype='real' name='daily_new_deaths' ordinal='19' />
            <column datatype='real' name='population' ordinal='20' />
            <column datatype='string' name='vaccine' ordinal='21' />
            <column datatype='string' name='total_vaccinations_y' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_x]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>total_vaccinations_x</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_raw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations_raw]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>daily_vaccinations_raw</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>daily_vaccinations</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations_per_million]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>daily_vaccinations_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vaccines</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vaccines]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>vaccines</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_name]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>source_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_website</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_website]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>source_website</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_total_cases]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>cumulative_total_cases</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_new_cases]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>daily_new_cases</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active_cases]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>active_cases</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_total_deaths]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>cumulative_total_deaths</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_new_deaths]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>daily_new_deaths</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vaccine</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vaccine]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>vaccine</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_vaccinations_y]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>total_vaccinations_y</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Icon' datatype='string' name='[Calculation_480477828278341633]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_covid_combined_data.csv' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='real' hidden='true' name='[active_cases]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Total Cases' datatype='real' hidden='true' name='[cumulative_total_cases]' role='measure' type='quantitative' />
      <column caption='Cumulative Total Deaths' datatype='real' hidden='true' name='[cumulative_total_deaths]' role='measure' type='quantitative' />
      <column caption='Daily New Cases' datatype='real' hidden='true' name='[daily_new_cases]' role='measure' type='quantitative' />
      <column caption='Daily New Deaths' datatype='real' hidden='true' name='[daily_new_deaths]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations' datatype='real' hidden='true' name='[daily_vaccinations]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations Per Million' datatype='real' hidden='true' name='[daily_vaccinations_per_million]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations Raw' datatype='real' hidden='true' name='[daily_vaccinations_raw]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Iso Code' datatype='string' hidden='true' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='People Fully Vaccinated' datatype='real' hidden='true' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' hidden='true' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' hidden='true' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' hidden='true' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' hidden='true' name='[population]' role='measure' type='quantitative' />
      <column caption='Source Name' datatype='string' hidden='true' name='[source_name]' role='dimension' type='nominal' />
      <column caption='Source Website' datatype='string' hidden='true' name='[source_website]' role='dimension' type='nominal' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' hidden='true' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations X' datatype='real' hidden='true' name='[total_vaccinations_x]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Y' datatype='string' hidden='true' name='[total_vaccinations_y]' role='dimension' type='nominal' />
      <column caption='Vaccine' datatype='string' hidden='true' name='[vaccine]' role='dimension' type='nominal' />
      <column caption='Vaccines' datatype='string' hidden='true' name='[vaccines]' role='dimension' type='nominal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,MONTH(Date))' hidden='true' name='[Action (Country,MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[tmn:date:ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/Carlos/AppData/Local/Temp/TableauTemp/#TableauTemp_0d3iqze0bfayzf101dw501tym2w9.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/24/2024 07:32:39 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>0</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>537</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>iso_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[iso_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>iso_code</remote-alias>
              <ordinal>1</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>822</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3381</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations_x</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_vaccinations_x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_vaccinations_x</remote-alias>
              <ordinal>3</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>131832</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_vaccinated</remote-alias>
              <ordinal>4</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>127514</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_fully_vaccinated]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_fully_vaccinated</remote-alias>
              <ordinal>5</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>102889</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>daily_vaccinations_raw</remote-name>
              <remote-type>5</remote-type>
              <local-name>[daily_vaccinations_raw]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>daily_vaccinations_raw</remote-alias>
              <ordinal>6</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>55691</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>daily_vaccinations</remote-name>
              <remote-type>5</remote-type>
              <local-name>[daily_vaccinations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>daily_vaccinations</remote-alias>
              <ordinal>7</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44620</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_vaccinations_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_vaccinations_per_hundred</remote-alias>
              <ordinal>8</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>45445</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_vaccinated_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_vaccinated_per_hundred</remote-alias>
              <ordinal>9</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>32584</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>people_fully_vaccinated_per_hundred</remote-name>
              <remote-type>5</remote-type>
              <local-name>[people_fully_vaccinated_per_hundred]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
              <ordinal>10</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31814</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>daily_vaccinations_per_million</remote-name>
              <remote-type>5</remote-type>
              <local-name>[daily_vaccinations_per_million]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>daily_vaccinations_per_million</remote-alias>
              <ordinal>11</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31142</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vaccines</remote-name>
              <remote-type>129</remote-type>
              <local-name>[vaccines]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vaccines</remote-alias>
              <ordinal>12</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>214</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source_name</remote-alias>
              <ordinal>13</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>214</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>source_website</remote-name>
              <remote-type>129</remote-type>
              <local-name>[source_website]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>source_website</remote-alias>
              <ordinal>14</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>353</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cumulative_total_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cumulative_total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cumulative_total_cases</remote-alias>
              <ordinal>15</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>66911</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>daily_new_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[daily_new_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>daily_new_cases</remote-alias>
              <ordinal>16</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14968</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>active_cases</remote-name>
              <remote-type>5</remote-type>
              <local-name>[active_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>active_cases</remote-alias>
              <ordinal>17</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40919</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cumulative_total_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cumulative_total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cumulative_total_deaths</remote-alias>
              <ordinal>18</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30036</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>daily_new_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[daily_new_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>daily_new_deaths</remote-alias>
              <ordinal>19</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1937</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>20</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>395</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vaccine</remote-name>
              <remote-type>129</remote-type>
              <local-name>[vaccine]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vaccine</remote-alias>
              <ordinal>21</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations_y</remote-name>
              <remote-type>129</remote-type>
              <local-name>[total_vaccinations_y]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_vaccinations_y</remote-alias>
              <ordinal>22</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>372</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_covid_combined_data.csv' id='cleaned_covid_combined_data.csv_D3D31A1F1E07400395AFF1A6CED7ED39'>
            <properties context=''>
              <relation connection='textscan.06ke9k60qa0fn71d3exl704cprix' name='cleaned_covid_combined_data.csv' table='[cleaned_covid_combined_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='string' name='iso_code' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='real' name='total_vaccinations_x' ordinal='3' />
                  <column datatype='real' name='people_vaccinated' ordinal='4' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='5' />
                  <column datatype='real' name='daily_vaccinations_raw' ordinal='6' />
                  <column datatype='real' name='daily_vaccinations' ordinal='7' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='8' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='9' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='10' />
                  <column datatype='real' name='daily_vaccinations_per_million' ordinal='11' />
                  <column datatype='string' name='vaccines' ordinal='12' />
                  <column datatype='string' name='source_name' ordinal='13' />
                  <column datatype='string' name='source_website' ordinal='14' />
                  <column datatype='real' name='cumulative_total_cases' ordinal='15' />
                  <column datatype='real' name='daily_new_cases' ordinal='16' />
                  <column datatype='real' name='active_cases' ordinal='17' />
                  <column datatype='real' name='cumulative_total_deaths' ordinal='18' />
                  <column datatype='real' name='daily_new_deaths' ordinal='19' />
                  <column datatype='real' name='population' ordinal='20' />
                  <column datatype='string' name='vaccine' ordinal='21' />
                  <column datatype='string' name='total_vaccinations_y' ordinal='22' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='cleaned_covid_combined_data' inline='true' name='federated.1gi7ov20lub6hn18gs31o1c1dutw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_covid_combined_data' name='textscan.146n9p0137xjz41c8jn7g19pc6wp'>
            <connection class='textscan' directory='C:/Users/Carlos/Documents/GitHub/Interactive-Dashboards/data' filename='cleaned_covid_combined_data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.146n9p0137xjz41c8jn7g19pc6wp' name='cleaned_covid_combined_data.csv' table='[cleaned_covid_combined_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='iso_code' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='real' name='total_vaccinations_x' ordinal='3' />
            <column datatype='real' name='people_vaccinated' ordinal='4' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='5' />
            <column datatype='real' name='daily_vaccinations_raw' ordinal='6' />
            <column datatype='real' name='daily_vaccinations' ordinal='7' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='8' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='9' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='10' />
            <column datatype='real' name='daily_vaccinations_per_million' ordinal='11' />
            <column datatype='string' name='vaccines' ordinal='12' />
            <column datatype='string' name='source_name' ordinal='13' />
            <column datatype='string' name='source_website' ordinal='14' />
            <column datatype='real' name='cumulative_total_cases' ordinal='15' />
            <column datatype='real' name='daily_new_cases' ordinal='16' />
            <column datatype='real' name='active_cases' ordinal='17' />
            <column datatype='real' name='cumulative_total_deaths' ordinal='18' />
            <column datatype='real' name='daily_new_deaths' ordinal='19' />
            <column datatype='real' name='population' ordinal='20' />
            <column datatype='string' name='vaccine' ordinal='21' />
            <column datatype='string' name='total_vaccinations_y' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.146n9p0137xjz41c8jn7g19pc6wp' name='cleaned_covid_combined_data.csv' table='[cleaned_covid_combined_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='iso_code' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='real' name='total_vaccinations_x' ordinal='3' />
            <column datatype='real' name='people_vaccinated' ordinal='4' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='5' />
            <column datatype='real' name='daily_vaccinations_raw' ordinal='6' />
            <column datatype='real' name='daily_vaccinations' ordinal='7' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='8' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='9' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='10' />
            <column datatype='real' name='daily_vaccinations_per_million' ordinal='11' />
            <column datatype='string' name='vaccines' ordinal='12' />
            <column datatype='string' name='source_name' ordinal='13' />
            <column datatype='string' name='source_website' ordinal='14' />
            <column datatype='real' name='cumulative_total_cases' ordinal='15' />
            <column datatype='real' name='daily_new_cases' ordinal='16' />
            <column datatype='real' name='active_cases' ordinal='17' />
            <column datatype='real' name='cumulative_total_deaths' ordinal='18' />
            <column datatype='real' name='daily_new_deaths' ordinal='19' />
            <column datatype='real' name='population' ordinal='20' />
            <column datatype='string' name='vaccine' ordinal='21' />
            <column datatype='string' name='total_vaccinations_y' ordinal='22' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_x</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_x]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>total_vaccinations_x</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_raw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations_raw]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>daily_vaccinations_raw</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>daily_vaccinations</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_vaccinations_per_million]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>daily_vaccinations_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vaccines</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vaccines]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>vaccines</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_name]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>source_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>source_website</remote-name>
            <remote-type>129</remote-type>
            <local-name>[source_website]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>source_website</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_total_cases]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>cumulative_total_cases</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_new_cases]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>daily_new_cases</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active_cases]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>active_cases</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_total_deaths]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>cumulative_total_deaths</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[daily_new_deaths]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>daily_new_deaths</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>vaccine</remote-name>
            <remote-type>129</remote-type>
            <local-name>[vaccine]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>vaccine</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_y</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_vaccinations_y]</local-name>
            <parent-name>[cleaned_covid_combined_data.csv]</parent-name>
            <remote-alias>total_vaccinations_y</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Deaths per Million' datatype='real' name='[Calculation_1138284848700166144]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([daily_new_deaths])/MAX([population]) * 1000000' />
      </column>
      <column caption='Total Vaccinations per million' datatype='real' name='[Calculation_1138284848702885890]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([total_vaccinations_x]) / MAX([population]) * 1000000' />
      </column>
      <column caption='Manufacturers' datatype='string' name='[Calculation_480477828268093440]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IFNULL([vaccine],&apos;Unknown&apos;)' />
      </column>
      <column caption='Vaccinations' datatype='real' name='[Calculation_688769311310077952]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([total_vaccinations_x])' />
      </column>
      <column caption='Deaths' datatype='real' name='[Calculation_688769311310450689]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([daily_new_deaths])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='cleaned_covid_combined_data.csv' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='real' hidden='true' name='[active_cases]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
        </semantic-values>
      </column>
      <column caption='Cumulative Total Cases' datatype='real' hidden='true' name='[cumulative_total_cases]' role='measure' type='quantitative' />
      <column caption='Cumulative Total Deaths' datatype='real' hidden='true' name='[cumulative_total_deaths]' role='measure' type='quantitative' />
      <column caption='Daily New Cases' datatype='real' hidden='true' name='[daily_new_cases]' role='measure' type='quantitative' />
      <column caption='Daily New Deaths' datatype='real' name='[daily_new_deaths]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations' datatype='real' hidden='true' name='[daily_vaccinations]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations Per Million' datatype='real' hidden='true' name='[daily_vaccinations_per_million]' role='measure' type='quantitative' />
      <column caption='Daily Vaccinations Raw' datatype='real' hidden='true' name='[daily_vaccinations_raw]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Iso Code' datatype='string' hidden='true' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='People Fully Vaccinated' datatype='real' hidden='true' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' hidden='true' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' hidden='true' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' hidden='true' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Source Name' datatype='string' hidden='true' name='[source_name]' role='dimension' type='nominal' />
      <column caption='Source Website' datatype='string' hidden='true' name='[source_website]' role='dimension' type='nominal' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' hidden='true' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations_x]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Y' datatype='string' hidden='true' name='[total_vaccinations_y]' role='dimension' type='nominal' />
      <column caption='Vaccine' datatype='string' name='[vaccine]' role='dimension' type='nominal' />
      <column caption='Vaccines' datatype='string' name='[vaccines]' role='dimension' type='nominal' />
      <column-instance column='[total_vaccinations_x]' derivation='Avg' name='[avg:total_vaccinations_x:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations_x]' derivation='Max' name='[max:total_vaccinations_x:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_480477828268093440]' derivation='None' name='[none:Calculation_480477828268093440:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[vaccine]' derivation='None' name='[none:vaccine:nk]' pivot='key' type='nominal' />
      <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[daily_new_deaths]' derivation='Sum' name='[sum:daily_new_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations_x]' derivation='Sum' name='[sum:total_vaccinations_x:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_688769311310077952]' derivation='User' name='[usr:Calculation_688769311310077952:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,MONTH(Date))' hidden='true' name='[Action (Country,MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
          <groupfilter function='level-members' level='[tmn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Manufacturers)' hidden='true' name='[Action (Manufacturers)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_480477828268093440]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/Carlos/AppData/Local/Temp/TableauTemp/#TableauTemp_1v2538k1dzkvox1gmxszz1x7rbom.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/24/2024 07:37:49 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>0</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>545</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>1</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3453</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_vaccinations_x</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_vaccinations_x]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_vaccinations_x</remote-alias>
              <ordinal>2</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>74773</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vaccines</remote-name>
              <remote-type>129</remote-type>
              <local-name>[vaccines]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vaccines</remote-alias>
              <ordinal>3</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>daily_new_deaths</remote-name>
              <remote-type>5</remote-type>
              <local-name>[daily_new_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>daily_new_deaths</remote-alias>
              <ordinal>4</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1558</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>5</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>5</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>382</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>vaccine</remote-name>
              <remote-type>129</remote-type>
              <local-name>[vaccine]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>vaccine</remote-alias>
              <ordinal>6</ordinal>
              <family>cleaned_covid_combined_data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1gi7ov20lub6hn18gs31o1c1dutw].[sum:active_cases:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1gi7ov20lub6hn18gs31o1c1dutw].[sum:daily_new_deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1gi7ov20lub6hn18gs31o1c1dutw].[avg:total_vaccinations_x:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1gi7ov20lub6hn18gs31o1c1dutw].[max:total_vaccinations_x:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1gi7ov20lub6hn18gs31o1c1dutw].[sum:total_vaccinations_x:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310077952:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:vaccine:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Sinopharm/Beijing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moderna&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sinovac&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Novavax&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CanSino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oxford/AstraZeneca&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sputnik V&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pfizer/BioNTech&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Covaxin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnson&amp;Johnson&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_480477828268093440:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Sinovac&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CanSino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Novavax&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sputnik V&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oxford/AstraZeneca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Covaxin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pfizer/BioNTech&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sinopharm/Beijing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Johnson&amp;Johnson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moderna&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ARMENIA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BRITISH VIRGIN ISLANDS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;China Hong Kong Sar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;COLOMBIA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;EGYPT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;GHANA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;IRAN&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;LIBERIA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MOLDOVA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NORTHERN IRELAND&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SAINT HELENA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SOLOMON ISLANDS&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;TOGO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VIET NAM&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AFGHANISTAN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BENIN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CAYMAN ISLANDS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CZECHIA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;FINLAND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;HAITI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KIRIBATI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MALTA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;NEW CALEDONIA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;POLAND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SERBIA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SWITZERLAND&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ANGOLA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;BONAIRE SINT EUSTATIUS AND SABA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CHILE&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Democratic Republic Of The Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DJIBOUTI&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;GABON&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;HUNGARY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;LAOS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MAURITIUS&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NIGERIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;ROMANIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SINT MAARTEN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TANZANIA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#6b66bc'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AZERBAIJAN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BURKINA FASO&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;COSTA RICA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ERITREA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;GRENADA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ISRAEL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LUXEMBOURG&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;MONTSERRAT&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;PALAU&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SAINT PIERRE AND MIQUELON&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SOUTH SUDAN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TUNISIA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;WALLIS AND FUTUNA ISLANDS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ARUBA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;BRUNEI&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China Macao Sar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;COMOROS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EL SALVADOR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;GIBRALTAR&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IRAQ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LIBYA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MONACO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NORWAY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SAINT KITTS AND NEVIS&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SOMALIA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;TOKELAU&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VIETNAM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ANGUILLA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BOSNIA AND HERZEGOVINA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CHINA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DOMINICA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;GAMBIA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ICELAND&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;LATVIA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MAYOTTE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NIUE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;RUSSIA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SINT MAARTEN (DUTCH PART)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;THAILAND&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UZBEKISTAN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BELGIUM&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CAPE VERDE&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CYPRUS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;FALKLAND ISLANDS MALVINAS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GUINEA-BISSAU&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KAZAKHSTAN&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MALDIVES&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NEPAL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;PHILIPPINES&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Vincent And The Grenadines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SCOTLAND&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SWAZILAND&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad And Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;UNITED ARAB EMIRATES&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ALBANIA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BERMUDA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CENTRAL AFRICAN REPUBLIC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DEMOCRATIC REPUBLIC OF CONGO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Falkland Islands Malvinas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;FRANCE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;HOLY SEE&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KOSOVO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MARSHALL ISLANDS&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NEW ZEALAND&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PORTUGAL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SEYCHELLES&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SYRIA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;UNITED KINGDOM&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wallis And Futuna Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BARBADOS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CAMEROON&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CUBA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;FAEROE ISLANDS&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GUINEA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JERSEY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MALAWI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;NAMIBIA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;PARAGUAY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SAO TOME AND PRINCIPE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SUDAN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TUVALU&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;ZIMBABWE&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua And Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;ANTIGUA AND BARBUDA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia And Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BOTSWANA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CHINA HONG KONG SAR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DOMINICAN REPUBLIC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;GEORGIA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;INDIA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;LEBANON&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MEXICO&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NORTH MACEDONIA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RWANDA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SLOVAKIA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TIMOR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VANUATU&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BAHAMAS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BURUNDI&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;COTE D IVOIRE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ESTONIA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GUADELOUPE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;ITALY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MACAO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;MOROCCO&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;PALESTINE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Kitts And Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SAINT VINCENT AND THE GRENADINES&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SPAIN&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TURKEY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WESTERN SAHARA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BAHRAIN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CABO VERDE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;COTE D&apos;IVOIRE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ESWATINI&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GUATEMALA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isle Of Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JAMAICA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MACEDONIA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MOZAMBIQUE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;PANAMA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SAMOA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SRI LANKA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;TURKMENISTAN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;YEMEN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BELARUS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CANADA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CURACAO&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;FALKLAND ISLANDS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GUINEA BISSAU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JORDAN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MALAYSIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;NAURU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PERU&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Pierre And Miquelon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SAUDI ARABIA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SURINAME&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UGANDA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BELIZE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CARIBBEAN NETHERLANDS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CZECH REPUBLIC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;FIJI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;GUYANA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KENYA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MALI&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NETHERLANDS&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;PITCAIRN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SENEGAL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SWEDEN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;UKRAINE&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AUSTRALIA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;BRUNEI DARUSSALAM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CONGO&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;ENGLAND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;GREECE&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IRELAND&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LIECHTENSTEIN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MONGOLIA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;OMAN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SAINT LUCIA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SOUTH AFRICA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;TONGA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;WALES&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ARGENTINA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BRAZIL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CHINA MACAO SAR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;ECUADOR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GERMANY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;INDONESIA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;LESOTHO&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MICRONESIA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NORTHERN CYPRUS&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SAINT BARTHELEMY&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SLOVENIA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TIMOR LESTE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;VENEZUELA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ALGERIA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BHUTAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CHAD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DEMOCRATIC REPUBLIC OF THE CONGO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;FRENCH GUIANA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;HONDURAS&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KUWAIT&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MARTINIQUE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NICARAGUA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;QATAR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sao Tome And Principe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SIERRA LEONE&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;State Of Palestine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;TAIWAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;UNITED STATES&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;BANGLADESH&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CAMBODIA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cote D Ivoire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CROATIA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ETHIOPIA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GUERNSEY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JAPAN&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MADAGASCAR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MYANMAR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PAPUA NEW GUINEA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SAN MARINO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;STATE OF PALESTINE&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TURKS AND CAICOS ISLANDS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ZAMBIA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AUSTRIA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;BULGARIA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;COOK ISLANDS&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;EQUATORIAL GUINEA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;GREENLAND&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;ISLE OF MAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;LITHUANIA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;MONTENEGRO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PAKISTAN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SAINT MARTIN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SOUTH KOREA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;TRINIDAD AND TOBAGO&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;WALLIS AND FUTUNA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ANDORRA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BOLIVIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CHANNEL ISLANDS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DENMARK&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;FRENCH POLYNESIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;HONG KONG&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KYRGYZSTAN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MAURITANIA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NIGER&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;REUNION&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SINGAPORE&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TAJIKISTAN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks And Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;URUGUAY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='cleaned_covid_combined_data.csv' id='cleaned_covid_combined_data.csv_2BD1EE6D7C0346258245CC65EB578D1F'>
            <properties context=''>
              <relation connection='textscan.146n9p0137xjz41c8jn7g19pc6wp' name='cleaned_covid_combined_data.csv' table='[cleaned_covid_combined_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='string' name='iso_code' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='real' name='total_vaccinations_x' ordinal='3' />
                  <column datatype='real' name='people_vaccinated' ordinal='4' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='5' />
                  <column datatype='real' name='daily_vaccinations_raw' ordinal='6' />
                  <column datatype='real' name='daily_vaccinations' ordinal='7' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='8' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='9' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='10' />
                  <column datatype='real' name='daily_vaccinations_per_million' ordinal='11' />
                  <column datatype='string' name='vaccines' ordinal='12' />
                  <column datatype='string' name='source_name' ordinal='13' />
                  <column datatype='string' name='source_website' ordinal='14' />
                  <column datatype='real' name='cumulative_total_cases' ordinal='15' />
                  <column datatype='real' name='daily_new_cases' ordinal='16' />
                  <column datatype='real' name='active_cases' ordinal='17' />
                  <column datatype='real' name='cumulative_total_deaths' ordinal='18' />
                  <column datatype='real' name='daily_new_deaths' ordinal='19' />
                  <column datatype='real' name='population' ordinal='20' />
                  <column datatype='string' name='vaccine' ordinal='21' />
                  <column datatype='string' name='total_vaccinations_y' ordinal='22' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Map to all' name='[Action1_D5FEEB61CE4D417F9CD7E1E37BA4D63C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='COVID-19 World Vaccinations' type='sheet' worksheet='Vaccinations by Country' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Vaccinations by Country' />
        <param name='special-fields' value='all' />
        <param name='target' value='COVID-19 World Vaccinations' />
      </command>
    </action>
    <action caption='Manufacturer to all' name='[Action3_BF8E0310553A41B19C3388862F15B75A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='COVID-19 World Vaccinations' type='sheet' worksheet='Vaccines by Manufacturer' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Vaccines by Manufacturer' />
        <param name='special-fields' value='all' />
        <param name='target' value='COVID-19 World Vaccinations' />
      </command>
    </action>
    <action caption='vaccinations to all' name='[Action3_D59D177C1E7C4888B86937B33B257B23]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='COVID-19 World Vaccinations' type='sheet' worksheet='Vaccinations and Deaths' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Vaccinations and Deaths,Vaccinations by Country' />
        <param name='special-fields' value='all' />
        <param name='target' value='COVID-19 World Vaccinations' />
      </command>
    </action>
    <action caption='Summary to all' name='[Action4_61C6CF47773C4CA0A41CEBEF62A877B4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='COVID-19 World Vaccinations' type='sheet'>
        <exclude-sheet name='Vaccinations by Country' />
        <exclude-sheet name='Icon' />
        <exclude-sheet name='Vaccinations and Deaths' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Vaccinations by Country,Icon,Summary' />
        <param name='special-fields' value='all' />
        <param name='target' value='COVID-19 World Vaccinations' />
      </command>
    </action>
    <action caption='Hyperlink1' name='[Action5_66A0D5DD797D43ED821E19163BE2711C]'>
      <activation type='on-select' />
      <source dashboard='COVID-19 World Vaccinations' type='sheet' worksheet='Icon' />
      <link caption='' expression='https://github.com/CarlosADuranVIllalobos/Interactive-Dashboards'>
        <url-action-type>browser</url-action-type>
      </link>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Icon'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_combined_data (2)' name='federated.1d7zbz605ba1rr1byo1cu14uf5w0' />
          </datasources>
          <datasource-dependencies datasource='federated.1d7zbz605ba1rr1byo1cu14uf5w0'>
            <column caption='Icon' datatype='string' name='[Calculation_480477828278341633]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_480477828278341633]' derivation='None' name='[none:Calculation_480477828278341633:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1d7zbz605ba1rr1byo1cu14uf5w0].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action1_D5FEEB61CE4D417F9CD7E1E37BA4D63C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1d7zbz605ba1rr1byo1cu14uf5w0].[Action (Country,MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_D59D177C1E7C4888B86937B33B257B23]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[country]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1d7zbz605ba1rr1byo1cu14uf5w0].[none:Calculation_480477828278341633:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_480477828278341633:nk]' />
              <groupfilter function='empty-level' member='[none:Calculation_480477828278341633:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1d7zbz605ba1rr1byo1cu14uf5w0].[none:Calculation_480477828278341633:nk]</column>
            <column>[federated.1d7zbz605ba1rr1byo1cu14uf5w0].[Action (Country)]</column>
            <column>[federated.1d7zbz605ba1rr1byo1cu14uf5w0].[Action (Country,MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1d7zbz605ba1rr1byo1cu14uf5w0].[none:Calculation_480477828278341633:nk]' value='69' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1d7zbz605ba1rr1byo1cu14uf5w0].[none:Calculation_480477828278341633:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#000000' fontname='Benton Sans Book'>Please visit my github repository for more information:</run>
                <run>Ã&#10;</run>
                <run fontcolor='#000000' fontname='Benton Sans Book'>https://github.com/CarlosADuranVIllalobos/Interactive-Dashboards</run>
                <run>Ã&#10;&#10;</run>
                <run fontcolor='#000000' fontname='Benton Sans Book'>The datasets used in this project are:</run>
                <run>Ã&#10;</run>
                <run fontcolor='#000000' fontname='Benton Sans Book'>1. COVID-19 World Vaccination Progress: Contains information on vaccination progress across various countries. </run>
                <run>Ã&#10;</run>
                <run fontcolor='#000000' fontname='Benton Sans Book'>2. COVID-19 World Vaccination Progress by Manufacturer: Contains information on vaccination progress by different manufacturers.</run>
                <run>Ã&#10;</run>
                <run fontcolor='#000000' fontname='Benton Sans Book'> 3. COVID-19 Worldometer Data: Contains daily information on COVID-19 cases and deaths across various countries. </run>
                <run>Ã&#10;</run>
                <run fontcolor='#000000' fontname='Benton Sans Book'>4.World Population Data: Contains information on the total population by country.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='custom/icon-with-question-mark-th.png' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1d7zbz605ba1rr1byo1cu14uf5w0].[none:Calculation_480477828278341633:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{3F2A7754-BEA5-46E2-B89B-7981BD41E833}' />
    </worksheet>
    <worksheet name='Scatter Plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_combined_data' name='federated.1gi7ov20lub6hn18gs31o1c1dutw' />
          </datasources>
          <datasource-dependencies datasource='federated.1gi7ov20lub6hn18gs31o1c1dutw'>
            <column caption='Deaths per Million' datatype='real' name='[Calculation_1138284848700166144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([daily_new_deaths])/MAX([population]) * 1000000' />
            </column>
            <column caption='Total Vaccinations per million' datatype='real' name='[Calculation_1138284848702885890]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([total_vaccinations_x]) / MAX([population]) * 1000000' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Daily New Deaths' datatype='real' name='[daily_new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[vaccines]' derivation='None' name='[none:vaccines:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations_x]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1138284848700166144]' derivation='User' name='[usr:Calculation_1138284848700166144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1138284848702885890]' derivation='User' name='[usr:Calculation_1138284848702885890:qk]' pivot='key' type='quantitative' />
            <column caption='Vaccines' datatype='string' name='[vaccines]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:vaccines:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:vaccines:nk]' />
              <groupfilter function='member' level='[none:vaccines:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:vaccines:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_1138284848700166144:qk]' scope='rows' value='Total Deaths per Million' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_1138284848700166144:qk]</rows>
        <cols>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_1138284848702885890:qk]</cols>
      </table>
      <simple-id uuid='{FB12CE19-B233-4E0A-9D15-96FBD7192660}' />
    </worksheet>
    <worksheet name='Summary'>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_combined_data' name='federated.1gi7ov20lub6hn18gs31o1c1dutw' />
          </datasources>
          <datasource-dependencies datasource='federated.1gi7ov20lub6hn18gs31o1c1dutw'>
            <column caption='Manufacturers' datatype='string' name='[Calculation_480477828268093440]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([vaccine],&apos;Unknown&apos;)' />
            </column>
            <column caption='Vaccinations' datatype='real' name='[Calculation_688769311310077952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([total_vaccinations_x])' />
            </column>
            <column caption='Deaths' datatype='real' name='[Calculation_688769311310450689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([daily_new_deaths])' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Cumulative Total Deaths' datatype='real' hidden='true' name='[cumulative_total_deaths]' role='measure' type='quantitative' />
            <column caption='Daily New Deaths' datatype='real' name='[daily_new_deaths]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[total_vaccinations_x]' derivation='Max' name='[max:total_vaccinations_x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[cumulative_total_deaths]' derivation='Sum' name='[sum:cumulative_total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[daily_new_deaths]' derivation='Sum' name='[sum:daily_new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations_x]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_688769311310077952]' derivation='User' name='[usr:Calculation_688769311310077952:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_688769311310450689]' derivation='User' name='[usr:Calculation_688769311310450689:qk]' pivot='key' type='quantitative' />
            <column caption='Vaccine' datatype='string' name='[vaccine]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310450689:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310077952:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1gi7ov20lub6hn18gs31o1c1dutw].[sum:daily_new_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1gi7ov20lub6hn18gs31o1c1dutw].[max:total_vaccinations_x:qk]&quot;</bucket>
              <bucket>&quot;[federated.1gi7ov20lub6hn18gs31o1c1dutw].[sum:population:qk]&quot;</bucket>
              <bucket>&quot;[federated.1gi7ov20lub6hn18gs31o1c1dutw].[sum:cumulative_total_deaths:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action1_D5FEEB61CE4D417F9CD7E1E37BA4D63C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Country,MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_D59D177C1E7C4888B86937B33B257B23]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[country]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Manufacturers)]'>
            <groupfilter function='level-members' level='[Calculation_480477828268093440]' user:ui-action-filter='[Action3_BF8E0310553A41B19C3388862F15B75A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Country)]</column>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[:Measure Names]</column>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]</column>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Country,MONTH(Date))]</column>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Manufacturers)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]</rows>
        <cols>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{887DACE2-EF1A-4092-986A-D7613FADE53F}' />
    </worksheet>
    <worksheet name='Vaccinations and Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_combined_data' name='federated.1gi7ov20lub6hn18gs31o1c1dutw' />
          </datasources>
          <datasource-dependencies datasource='federated.1gi7ov20lub6hn18gs31o1c1dutw'>
            <column caption='Manufacturers' datatype='string' name='[Calculation_480477828268093440]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([vaccine],&apos;Unknown&apos;)' />
            </column>
            <column caption='Vaccinations' datatype='real' name='[Calculation_688769311310077952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([total_vaccinations_x])' />
            </column>
            <column caption='Deaths' datatype='real' name='[Calculation_688769311310450689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([daily_new_deaths])' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Daily New Deaths' datatype='real' name='[daily_new_deaths]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations_x]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_688769311310077952]' derivation='User' name='[usr:Calculation_688769311310077952:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_688769311310450689]' derivation='User' name='[usr:Calculation_688769311310450689:qk]' pivot='key' type='quantitative' />
            <column caption='Vaccine' datatype='string' name='[vaccine]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action1_D5FEEB61CE4D417F9CD7E1E37BA4D63C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Manufacturers)]'>
            <groupfilter function='level-members' level='[Calculation_480477828268093440]' user:ui-action-filter='[Action3_BF8E0310553A41B19C3388862F15B75A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[tmn:date:qk]' included-values='in-range'>
            <min>#2020-12-17 00:00:00#</min>
            <max>#2022-05-01 00:00:00#</max>
          </filter>
          <filter class='quantitative' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310077952:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310450689:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[tmn:date:qk]</column>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Country)]</column>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Manufacturers)]</column>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310077952:qk]</column>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310450689:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310077952:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310450689:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310077952:qk] + [federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310450689:qk])</rows>
        <cols>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{C23E7906-5536-4AF2-99E4-E780EC8B5C30}' />
    </worksheet>
    <worksheet name='Vaccinations by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_combined_data' name='federated.1gi7ov20lub6hn18gs31o1c1dutw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gi7ov20lub6hn18gs31o1c1dutw'>
            <column caption='Manufacturers' datatype='string' name='[Calculation_480477828268093440]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([vaccine],&apos;Unknown&apos;)' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_vaccinations_x]' derivation='Max' name='[max:total_vaccinations_x:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations_x]' role='measure' type='quantitative' />
            <column caption='Vaccine' datatype='string' name='[vaccine]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Manufacturers)]'>
            <groupfilter function='level-members' level='[Calculation_480477828268093440]' user:ui-action-filter='[Action3_BF8E0310553A41B19C3388862F15B75A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Manufacturers)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Longitude (generated)]' field-type='quantitative' max='26612842.554863092' min='-18739087.524875563' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Latitude (generated)]' field-type='quantitative' max='10819517.280268539' min='-6978780.3183002425' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]' />
              <size column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[max:total_vaccinations_x:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#000000'>In</run>
                <run fontcolor='#787878'>Ã </run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]>]]></run>
                <run bold='true'> : </run>
                <run bold='true' fontcolor='#4e79a7'><![CDATA[<[federated.1gi7ov20lub6hn18gs31o1c1dutw].[max:total_vaccinations_x:qk]>]]></run>
                <run bold='true'> Total Vaccinations.</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='121' />
                <format attr='size' value='4.9290008544921875' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Latitude (generated)]</rows>
        <cols>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C125F832-9C0E-482F-88CC-E9D3286447C2}' />
    </worksheet>
    <worksheet name='Vaccines by Manufacturer'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_covid_combined_data' name='federated.1gi7ov20lub6hn18gs31o1c1dutw' />
          </datasources>
          <datasource-dependencies datasource='federated.1gi7ov20lub6hn18gs31o1c1dutw'>
            <column caption='Manufacturers' datatype='string' name='[Calculation_480477828268093440]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([vaccine],&apos;Unknown&apos;)' />
            </column>
            <column caption='Vaccinations' datatype='real' name='[Calculation_688769311310077952]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([total_vaccinations_x])' />
            </column>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Northern Ireland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Scotland&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;Wales&quot;' value='&quot;United Kingdom&quot;' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_480477828268093440]' derivation='None' name='[none:Calculation_480477828268093440:nk]' pivot='key' type='nominal' />
            <column-instance column='[vaccine]' derivation='None' name='[none:vaccine:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations_x]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_688769311310077952]' derivation='User' name='[usr:Calculation_688769311310077952:qk]' pivot='key' type='quantitative' />
            <column caption='Vaccine' datatype='string' name='[vaccine]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Country)]'>
            <groupfilter function='level-members' level='[country]' user:ui-action-filter='[Action1_D5FEEB61CE4D417F9CD7E1E37BA4D63C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Country,MONTH(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_D59D177C1E7C4888B86937B33B257B23]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[country]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:vaccine:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:vaccine:nk]' />
              <groupfilter function='empty-level' member='[none:vaccine:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:vaccine:nk]</column>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Country)]</column>
            <column>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[Action (Country,MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='618' />
            <format attr='height' value='509' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:Calculation_480477828268093440:nk]' />
              <wedge-size column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310077952:qk]' />
              <size column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310077952:qk]' />
              <text column='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:Calculation_480477828268093440:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='off' />
                <format attr='vertical-align' value='center' />
                <format attr='text-align' value='left' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.8570718765258789' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BBCD058D-DD5D-4371-A5D4-D1676B9C1D27}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='COVID-19 World Vaccinations'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='26'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='background-color' value='#ffffff' />
          <format attr='border-width' value='3' />
          <format attr='border-style' value='solid' />
          <format attr='border-color' value='#c0c0c0' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='text-align' value='left' />
        </style-rule>
      </style>
      <size maxheight='900' maxwidth='1300' minheight='900' minwidth='1300' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='8555' id='24' param='horz' type-v2='layout-flow' w='98770' x='615' y='889'>
            <zone h='8555' id='14' param='vert' type-v2='layout-flow' w='98770' x='615' y='889'>
              <zone fixed-size='75' h='8555' id='15' is-fixed='true' type-v2='title' w='98770' x='615' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='45778' id='26' param='horz' type-v2='layout-flow' w='98770' x='615' y='53333'>
            <zone h='45778' id='33' name='Vaccinations and Deaths' w='66001' x='615' y='53333'>
              <layout-cache minwidth='179' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone fixed-size='418' h='45778' id='27' is-fixed='true' name='Vaccines by Manufacturer' w='32769' x='66616' y='53333'>
              <layout-cache type-h='cell' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='43889' id='51' is-fixed='true' type-v2='layout-basic' w='98770' x='615' y='9444'>
            <zone h='43889' id='42' param='horz' type-v2='layout-flow' w='67923' x='615' y='9444'>
              <zone h='43889' id='22' name='Vaccinations by Country' w='67923' x='615' y='9444'>
                <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='43889' id='52' param='horz' type-v2='layout-flow' w='30847' x='68538' y='9444'>
              <zone fixed-size='295' h='43889' id='41' is-fixed='true' name='Summary' w='30847' x='68538' y='9444'>
                <layout-cache fixed-size-h='5224' type-h='fixed' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='10778' id='16' is-scaled='1' param='C:/Users/Carlos/Desktop/Logo CD.png' type-v2='bitmap' w='8846' x='615' y='-444' />
        <zone h='7556' id='38' name='Icon' show-title='false' w='5615' x='93077' y='1667'>
          <layout-cache fixed-size-w='60' type-h='fixed' type-w='fixed' />
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1' fontsize='26'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='60' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='59' param='vert' type-v2='layout-flow' w='98770' x='615' y='889'>
                <zone fixed-size='75' h='8555' id='15' type-v2='title' w='98770' x='615' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='97' h='10778' id='16' is-fixed='true' is-scaled='1' param='C:/Users/Carlos/Desktop/Logo CD.png' type-v2='bitmap' w='8846' x='615' y='-444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='68' h='7556' id='38' is-fixed='true' name='Icon' show-title='false' w='5615' x='93077' y='1667'>
                  <layout-cache fixed-size-w='60' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43889' id='22' is-fixed='true' name='Vaccinations by Country' w='67923' x='615' y='9444'>
                  <layout-cache minheight='244' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43889' id='41' is-fixed='true' name='Summary' w='30847' x='68538' y='9444'>
                  <layout-cache fixed-size-h='5224' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45778' id='33' is-fixed='true' name='Vaccinations and Deaths' w='66001' x='615' y='53333'>
                  <layout-cache minwidth='179' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45778' id='27' is-fixed='true' name='Vaccines by Manufacturer' w='32769' x='66616' y='53333'>
                  <layout-cache type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4F20E864-6F60-4321-AF3D-B15AFCB8A2C5}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='dashboard' maximized='true' name='COVID-19 World Vaccinations'>
      <viewpoints>
        <viewpoint name='Icon'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Summary'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Vaccinations and Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vaccinations by Country'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Vaccines by Manufacturer'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='27' />
      <simple-id uuid='{397A4490-2D30-48B0-BFA1-604E20793F22}' />
    </window>
    <window class='worksheet' name='Icon'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d7zbz605ba1rr1byo1cu14uf5w0].[none:Calculation_480477828278341633:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB7DA8CF-AC64-4495-A46F-EC84B13CD580}' />
    </window>
    <window class='worksheet' name='Vaccinations by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[max:total_vaccinations_x:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{DC04916F-8001-4076-90F5-4A8456F6F9FC}' />
    </window>
    <window class='worksheet' name='Vaccinations and Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[:Measure Names]</field>
            <field>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]</field>
            <field>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F442E63-EEF7-444F-98B3-FE012460CEEB}' />
    </window>
    <window class='worksheet' name='Scatter Plot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]</field>
            <field>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:total_vaccinations_y:nk]</field>
            <field>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:vaccines:nk]</field>
            <field>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[sum:daily_new_deaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73641E2B-CAFA-4290-B463-5A4BCBF33B8B}' />
    </window>
    <window class='worksheet' name='Vaccines by Manufacturer'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:Calculation_480477828268093440:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1gi7ov20lub6hn18gs31o1c1dutw].[usr:Calculation_688769311310077952:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:Calculation_480477828268093440:nk]</field>
            <field>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:total_vaccinations_y:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{59870449-12FD-4603-A1D1-F8D4CB89FB7A}' />
    </window>
    <window class='worksheet' name='Summary'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gi7ov20lub6hn18gs31o1c1dutw].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6A47B7B-A0D6-41BB-A163-84A64FACA6B9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='COVID-19 World Vaccinations' width='192'>
      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
      X1mxFZ2z8AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='73' name='Icon' width='64'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatter Plot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Summary' width='192'>
      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
      OxuZTMapU6eQSCRs3ryZhIQEZmZmqKuro7y8nLS0NL7zne98x68L5OeWxG6309HR4Vs080Hw
      C2P5ua35ncJY12qx+vHzWeemcQCn0/lx2+HHzyeCPxfIz22N3wH83NYsrUie6Kan9hDne2Ts
      +dOdRCmcNB1+meOtk8g10WzceQ/L0yPw2IzUHnuD+n4DMTmVPLBrDdq6V3n1XD+CIKCOK+fx
      3Wk8v7+OVXfeR1GinNbTx1DnlHPpzdcZN9sAgZCoUh7ek8yJOgvbtxdx/oUfE1D5F2zKj2Kw
      /izGqALK0qOYGajl1X0d7PrGF0lR3foZbS6Xi5MnT9La2gosrt+9VtTOYrEgCAKrV6+mpKSE
      EydOMDo6ypYtW1i2bJlvKeCpU6dobm4mPDycBx98kICAANra2jh16hRJSUncd9999Pf3c/jw
      YeLj49m5c+dHIo3idDo5ffo07e3tPhsdDgcnTpygt7eX7du3U1hYeMN5S6VSHnnkEYKCgjh8
      +DAGg4F77rmH2NhY3+L31tZW7r77bp8sutfr5fz58zQ0NPhqB5jNZl599VWcTif33nsvMTEx
      XLx4kbq6OlasWMGGDYsJPEtyAK/DxqWuITwLC3SMbGJDlsDs2BBrv/AdSjyX+I8X3iT/7z/H
      hd/+nImMnXz9Gxno+rqZt8Hs7DQ5W/+MvSviFw82Xkt7Zz+WwMsUPljBRE8LQdn38siT36Dz
      wL/TGP9l/nRlOAxV09g6z6Y7cxnT9jJz5CSFGQ8zO9zPtCSZsvRIupsug2SaM83zPFoZzq3u
      AnK5nLvvvpu7774bi8XCmTNnSEpK4sknn/QVl1OpVIyPj1NSUsKOHTs4ePAgubm5qNVqRFEk
      PT3dVwyutraW4uJimpqaePzxxxFFkYWFBRoaGnjiiSfo6enh0qVLbN269UM/l66uLtRqNU8+
      +STHjx8nKiqKjo4OwsPD+frXv37dONPpdOL1ennqqad8N3VNTQ3JycmUlZVRU1PDAw88gNFo
      5OrVq1itVtzud1TSuru7mZ2d5atf/aqvUs5bb73FnXfe6XOclpYW5ubmeOqpp7Db7b41L0sT
      xrKMYnXEUpSdQm/PwHXaPIGacAJFNxb9EFdmwti6IQeLfg4xOJZwFeB1Y9BNMT4+zuTcAgDh
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Vaccinations and Deaths' width='192'>
      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
      A5HnWL+fbykuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vaccinations by Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Vaccines by Manufacturer' width='192'>
      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
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='custom/icon-with-question-mark-th.png'>
        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
      </shape>
    </shapes>
  </external>
</workbook>
